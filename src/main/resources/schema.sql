DROP TABLE IF EXISTS Group_Tag;
DROP TABLE IF EXISTS Place_Tag;
DROP TABLE IF EXISTS Details_Events;
DROP TABLE IF EXISTS Users;
DROP TABLE IF EXISTS Groups;
DROP TABLE IF EXISTS Contacts;
DROP TABLE IF EXISTS Tags;
DROP TABLE IF EXISTS Places;
DROP TABLE IF EXISTS Details_Entertainments;
DROP TABLE IF EXISTS Details_FoodType;
DROP TABLE IF EXISTS Details_ForChildren;
DROP TABLE IF EXISTS Details_Halls;
DROP TABLE IF EXISTS Details_Kitchens;
DROP TABLE IF EXISTS Details_Languages;
DROP TABLE IF EXISTS Details_Parking;
DROP TABLE IF EXISTS Details_PhotoPaths;
DROP TABLE IF EXISTS Details;
DROP TABLE IF EXISTS Events;

CREATE TABLE Users (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) PRIMARY KEY,
  username VARCHAR(40) NOT NULL,
  password VARCHAR(40) NOT NULL);

CREATE TABLE Contacts (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) PRIMARY KEY,
  address VARCHAR(200),
  phone VARCHAR(100),
  web_site VARCHAR(100),
  email VARCHAR(40),
  work_time VARCHAR(100),
  place_id INTEGER);

CREATE TABLE Groups (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) PRIMARY KEY,
  name VARCHAR(40) NOT NULL,
  description VARCHAR(256));

CREATE TABLE Tags (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) PRIMARY KEY,
  name VARCHAR(40) NOT NULL,
  description VARCHAR(200),
  type VARCHAR(10));

CREATE TABLE Details (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) PRIMARY KEY,
  about VARCHAR(255),
  latitude DOUBLE,
  longitude DOUBLE,
  zoom INTEGER,
  menu VARCHAR(255));

CREATE TABLE Places (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) PRIMARY KEY,
  name VARCHAR(40) NOT NULL,
  image VARCHAR (1000),
  description VARCHAR(200),
  details_id INTEGER,
  CONSTRAINT fk_place_details FOREIGN KEY (details_id) REFERENCES Details (id));

CREATE TABLE Group_Tag (
  group_id INTEGER,
  tag_id INTEGER);

CREATE TABLE Place_Tag (
  place_id INTEGER,
  tag_id INTEGER);

CREATE TABLE Details_Entertainments (
  Details_id INTEGER,
  entertainment VARCHAR(255),
  entertainment_key VARCHAR(255),
  PRIMARY KEY (Details_id, entertainment_key),
  CONSTRAINT fk_entertain_details FOREIGN KEY (Details_id) REFERENCES Details (id));

CREATE TABLE Details_Halls (
  Details_id INTEGER,
  hall VARCHAR(255),
  hall_key VARCHAR(255),
  PRIMARY KEY (Details_id, hall_key),
  CONSTRAINT fk_hall_details FOREIGN KEY (Details_id) REFERENCES Details (id));

CREATE TABLE Details_FoodType (
  Details_id INTEGER,
  food VARCHAR(255),
  food_type_key VARCHAR(255),
  PRIMARY KEY (Details_id, food_type_key),
  CONSTRAINT fk_food_details FOREIGN KEY (Details_id) REFERENCES Details (id));

CREATE TABLE Details_Parking (
  Details_id INTEGER,
  parking VARCHAR(255),
  parking_key VARCHAR(255),
  PRIMARY KEY (Details_id, parking_key),
  CONSTRAINT fk_parking_details FOREIGN KEY (Details_id) REFERENCES Details (id));

CREATE TABLE Details_ForChildren (
  Details_id INTEGER,
  for_children VARCHAR(255),
  PRIMARY KEY (Details_id),
  CONSTRAINT fk_child_details FOREIGN KEY (Details_id) REFERENCES Details (id));

CREATE TABLE Details_Kitchens (
  Details_id INTEGER,
  kitchen VARCHAR(255),
  PRIMARY KEY (Details_id),
  CONSTRAINT fk_kitchen_details FOREIGN KEY (Details_id) REFERENCES Details (id));

CREATE TABLE Details_Languages (
  Details_id INTEGER,
  language VARCHAR(255),
  PRIMARY KEY (Details_id),
  CONSTRAINT fk_lang_details FOREIGN KEY (Details_id) REFERENCES Details (id));

CREATE TABLE Details_PhotoPaths (
  Details_id INTEGER,
  photo_path VARCHAR(255),
  PRIMARY KEY (Details_id),
  CONSTRAINT fk_photo_details FOREIGN KEY (Details_id) REFERENCES Details (id));
